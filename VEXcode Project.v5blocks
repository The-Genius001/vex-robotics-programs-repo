{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_sensing_set_digital_out\" id=\"oT$$tLI%],=l.h(O`.]~\"><field name=\"DIGITALOUT\">DigitalOutB</field><field name=\"STATE\">high</field><next><block type=\"v5_control_wait\" id=\"X0rqSOswPD0u;(+V~vtR\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"S]`Q*9IAZt7|22Tj~W]:\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"pOR*[o7t`+IL]9q.ZNPq\"><field name=\"MOTOR\">Motor1</field><field name=\"MODE\">coast</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"YL~G))wz~2!r|ns-gKFq\"><field name=\"MOTOR\">Motor1</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"MrR6?~G+Tn,/mmdv2#e(\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"v5_motion_spin_at_voltage\" id=\"{2SdbbR[H@SNo7wx^Z9C\"><field name=\"MOTOR\">Motor1</field><field name=\"DIRECTION\">fwd</field><value name=\"VOLTAGE\"><shadow type=\"math_number\" id=\"/{8DbZ5U*k550|Q64opT\"><field name=\"NUM\">14</field></shadow></value><next><block type=\"v5_control_forever\" id=\"-xc;UzH/YFn7L2EPI,)s\"><statement name=\"SUBSTACK\"><block type=\"v5_control_wait\" id=\"7I1%7#bNnzw!//FStF4r\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\":Wb!p1j^?nVy3-!YQ(m(\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_sensing_set_digital_out\" id=\"yoTB}C?N+zh985^P`qjL\"><field name=\"DIGITALOUT\">DigitalOutB</field><field name=\"STATE\">low</field><next><block type=\"v5_control_wait\" id=\"9NAg3p*b?.HU{=!CKp(_\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"?weBh3YG,9v14r:,Nw02\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_sensing_set_digital_out\" id=\"in^VoM}L+0!aw^{o2wNM\"><field name=\"DIGITALOUT\">DigitalOutB</field><field name=\"STATE\">high</field></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1],"name":"Motor1","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"}},{"port":[2],"name":"DigitalOutB","customName":false,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{},"triportSourcePort":22}],"slot":3,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor Motor1 = motor(PORT1, ratio6_1, false);\n\ndigital_out DigitalOutB = digital_out(Brain.ThreeWirePort.B);\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  DigitalOutB.set(true);\n  wait(5.0, seconds);\n  Motor1.setStopping(coast);\n  Motor1.setVelocity(200.0, percent);\n  Motor1.spin(forward, 14.0, volt);\n  while (true) {\n    wait(1.0, seconds);\n    DigitalOutB.set(false);\n    wait(1.0, seconds);\n    DigitalOutB.set(true);\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}